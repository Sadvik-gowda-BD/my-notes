

TODO:
1)Different different profiles for test and prod environment
2)Maintain roles in different reference table
3)Enhance application to user can have multiple roles
4)Enhance application to produce and consume JSON messages


=======================

Build image 
	docker build -t image-name .
	docker build -t image-name:tag-name directory
	//if we don't give tag anme it conside as latest. "." -> current directory
	>docker build -t user-service-0.0.1.jar .

Run docker image

	host_port:container_port image_name
	>docker run -p 8081:8090 user-service
	
	
stop container 
>docker stop container_id

	

run docker-compose
	
	>docker-compose up
	>docker-compose down

############################################## Ubuntu Docker ###############################


Run ubuntu on docker
>docker run -it ubuntu

root@>apt-get update
if vi editor not found on container
root@> apt-get install vim



Ideally when we start and stop the container, every time it will create a new container, if we need to use same container again and again the create a container with specific name, then container will be create with specified name, then every time start container with the given name

#Run docker container with specific name (test1_container)

>docker run -it --name test1_container ubuntu

>docker stop

restart the container
-a attaches to containers output, -i makes the terminal interactive
>docker start -ai test1_container

OR
By using Volumes - Way to save the data outside of the container's filesystem, and files will be shared across the containers. 

create a volume
>docker volume create my_test_volume

Run container with volume mounted
>docker  run -it -v my_test_volume:/data ubuntu 

inside container, create a file in the /data directory
>touch /data/myfile.txt


 




===============================



docker-compose exec kafka kafka-topics.sh --create --topic baeldung_linux
  --partitions 1 --replication-factor 1 --bootstrap-server kafka:9092
  
  
  
docker-compose exec kafka kafka-topics.sh --list --bootstrap-server kafka:9092


docker-compose exec kafka kafka-broker-api-versions.sh --bootstrap-server kafka:9092 


